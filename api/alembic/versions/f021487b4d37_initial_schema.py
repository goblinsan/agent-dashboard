"""Initial schema

Revision ID: f021487b4d37
Revises: 
Create Date: 2025-09-29 03:21:31.115902

"""
from __future__ import annotations

from alembic import op
from sqlalchemy.dialects import postgresql
import sqlalchemy as sa


revision = 'f021487b4d37'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('context_snapshot',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('repo_id', sa.String(length=255), nullable=False),
    sa.Column('branch', sa.String(length=255), nullable=True),
    sa.Column('workflow_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('snapshot_path', sa.String(length=1024), nullable=False),
    sa.Column('summary_path', sa.String(length=1024), nullable=False),
    sa.Column('files_ndjson_path', sa.String(length=1024), nullable=True),
    sa.Column('totals_files', sa.Integer(), nullable=False),
    sa.Column('totals_bytes', sa.Integer(), nullable=False),
    sa.Column('totals_lines', sa.Integer(), nullable=False),
    sa.Column('components_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('hotspots_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_context_snapshot_repo_id'), 'context_snapshot', ['repo_id'], unique=False)
    op.create_table('personas',
    sa.Column('key', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('maximum_active_tasks', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('goal', sa.Text(), nullable=True),
    sa.Column('direction', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('context_index',
    sa.Column('repo_id', sa.String(length=255), nullable=False),
    sa.Column('latest_snapshot_id', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['latest_snapshot_id'], ['context_snapshot.id'], ),
    sa.PrimaryKeyConstraint('repo_id')
    )
    op.create_table('milestones',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('not_started', 'in_progress', 'blocked', 'done', name='milestone_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_personas',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('persona_key', sa.String(length=64), nullable=False),
    sa.Column('limit_per_agent', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['persona_key'], ['personas.key'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_id', 'persona_key')
    )
    op.create_table('phases',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('milestone_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('estimated_effort', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('remaining_effort', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('priority_score', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('not_started', 'in_progress', 'blocked', 'done', name='phase_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['milestone_id'], ['milestones.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('milestone_id', sa.UUID(), nullable=False),
    sa.Column('phase_id', sa.UUID(), nullable=True),
    sa.Column('parent_task_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner', sa.String(length=255), nullable=True),
    sa.Column('persona_required', sa.String(length=255), nullable=True),
    sa.Column('acceptance_criteria', sa.Text(), nullable=True),
    sa.Column('effort_estimate', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('effort_spent', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('priority_score', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('risk_level', sa.Enum('low', 'medium', 'high', name='task_risk_level'), nullable=False),
    sa.Column('severity', sa.Enum('nice_to_have', 'minor', 'major', 'critical', name='task_severity'), nullable=False),
    sa.Column('status', sa.Enum('not_started', 'in_progress', 'blocked', 'in_review', 'done', name='task_status'), nullable=False),
    sa.Column('lock_version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('effort_estimate >= 0', name='task_effort_estimate_non_negative'),
    sa.CheckConstraint('effort_spent >= 0', name='task_effort_spent_non_negative'),
    sa.ForeignKeyConstraint(['milestone_id'], ['milestones.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['phase_id'], ['phases.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bugs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('severity', sa.String(length=2), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('milestone_id', sa.UUID(), nullable=True),
    sa.Column('task_id', sa.UUID(), nullable=True),
    sa.Column('category', sa.String(length=64), nullable=False),
    sa.Column('summary', sa.String(length=255), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['milestone_id'], ['milestones.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('event_logs')
    op.drop_table('bugs')
    op.drop_table('tasks')
    op.drop_table('phases')
    op.drop_table('project_personas')
    op.drop_table('milestones')
    op.drop_table('context_index')
    op.drop_table('projects')
    op.drop_table('personas')
    op.drop_index(op.f('ix_context_snapshot_repo_id'), table_name='context_snapshot')
    op.drop_table('context_snapshot')
    # ### end Alembic commands ###
